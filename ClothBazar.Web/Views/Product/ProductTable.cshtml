@model ClothBazar.Web.ViewModels.ProductSearchViewModel
@{
    ViewBag.Title = "ProductTable";
}
<script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.0/sweetalert.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.17.0/jquery.validate.min.js"></script>

<div>
    <form method="post">
        <input id="searchTxt" value="@Model.SearchTerm" name="Search">
        <button type="button" id="searchBtn"><i class="fa fa-search"></i></button>
   
    @*<form method="post">
            <input id="searchTxt" name="Search"/>
            <button type="button"id="searchBtn">Search</button>
        </form>*@
    <button type="button" id="newBtn">New</button>
    <button  type="button" id="resetBtn">Reset</button>
    </form>
</div>

<div id="tableContainer">
    <table  id="ProductsTable" class="table table-striped">
        <thead>
        <tr>
            <td>Product Name</td>
            <td>Category</td>
            <td>Price</td>
            <td class="wrap-td">Actions</td>
        </tr>
        </thead>
        <tbody>
        @if (Model.Products != null && Model.Products.Count > 0)
        {
            foreach (var product in Model.Products)
            {
                <tr>
                    <td>@product.Name</td>
                    <td>
                        @if (product.Category != null)
                        {
                            <text>@product.Category.Name</text>
                        }
                        else
                        {
                            <text>-</text>
                        }
                    </td>
                    <td>@product.Price</td>
                    <td class="wrap-td">
                        <button class="editBtn" data-id="@product.ID">Edit</button>
                        <button class="deleteBtn" data-id="@product.ID">Delete</button>
                        <button class="addtoCart" data-id="@product.ID">Add To Cart</button>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td class="text-danger" colspan="4">No Products found.</td>
               
               
    
            </tr>
        }
        </tbody>
    </table>
    <div>
        @if (Model.Pager != null&& Model.Pager.TotalPages>1)
        {

            if (Model.Pager.CurrentPage > 1)
            {
                <button class="pageButtons" data-pageno="1">First</button>
                <button class="pageButtons" data-pageno="@(Model.Pager.CurrentPage - 1)">Previous</button>
            }

            for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
            {
                string activeClass = Model.Pager.CurrentPage == page ? "active bg-info" : string.Empty;

                <button class="@activeClass pageButtons" data-pageno="@page">@page</button>
            }

            if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
            {
                <button class="pageButtons" data-pageno="@(Model.Pager.CurrentPage + 1)">Next</button>
                <button class="pageButtons" data-pageno="@Model.Pager.EndPage">Last</button>
            }			
        }
    </div>
</div>
<script>


    $(".pageButtons").click(function () {
        $.ajax({
            url: '@Url.Action("ProductTable", "Product")',
                data: {
                    pageNo: $(this).attr("data-pageno"),
                    search: '@Model.SearchTerm'
                }
            })
            .done(function (response) {
                $("#tableContainer").html(response);
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("FAIL");
            });
    });
    $("#searchBtn").click(function () {
        var searchValue = $("#searchTxt").val();
        $.ajax({
                url: '@Url.Action("ProductTable", "Product")',
                data: {
                    search: searchValue
                }

            })
            .done(function (response) {
                $("#tableContainer").html(response);
            })
            .fail(function (xmlHttpRequest, textStatus, errorThrown) {
                alert("Fail");
            });

    });

    $("#resetBtn").click(function () {
        var searchValue = '';

        $.ajax({
                url: '@Url.Action("ProductTable", "Product")',
                data: {

                    search: searchValue
                }
            })
            .done(function (response) {
                $("#tableContainer").html(response);
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("FAIL");
            });
    });
    $("#newBtn").click(function () {

        $.ajax({

                url: '@Url.Action("Create", "Product")'


            })
            .done(function (response) {
                $("#actionTable").html(response);
                focusAction("actionTable");
            })
            .fail(function (xmlHttpRequest, textStatus, errorThrown) {
                alert("Fail");
            });

    });
    $(".editBtn").click(function () {

        $.ajax({
                url: '@Url.Action("Edit", "Product")',
                data: {
                    Id: $(this).attr('data-id')
                }

            })
            .done(function (response) {
                $("#actionTable").html(response);
                focusAction("actionTable");
            })
            .fail(function (xmlHttpRequest, textStatus, errorThrown) {
                alert("Fail");
            });

    });
    $(".deleteBtn").click(function () {

        Swal.fire({
                title: 'Confirm',
                text: "Do your want to delete the data",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            })
            .then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                            type: 'POST',
                            url: '@Url.Action("Delete", "Product")',
                            data: {
                                Id: $(this).attr('data-id')
                            }

                        })
                        .done(function (response) {
                            $("#tableContainer").html(response);
                            Swal.fire(
                                'Deleted!',
                                'Your file has been deleted.',
                                'success'
                            )
                        })
                        .fail(function (xmlHttpRequest, textStatus, errorThrown) {
                            alert("Fail");
                        });


                }
            })
    });

    var products = [];
    $(".add-to-cart").click(function () {
        var productID = $(this).attr('data-id');

        products.push(productID);
        $.cookie('CartProducts', products.join("-"), { expires: 7, path: '/' });
        alert("cookieValue");
    });
</script>